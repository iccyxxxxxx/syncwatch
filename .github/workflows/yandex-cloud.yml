name: Docker Image CI

on:
  push:
    branches: ['main-test']
  workflow_dispatch:
    inputs:
      reason:
        description: 'why'
        required: false
        default: 'just for fun'

env:
  BACKEND_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/syncwatch-backend-test:${{ github.sha }}
  NGINX_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/syncwatch-nginx-test:${{ github.sha }}

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Backend
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ env.BACKEND_IMAGE }}

  build-nginx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Nginx for together composing
        uses: docker/build-push-action@v3
        with:
          context: ./nginx
          file: ./nginx/Dockerfile
          push: true
          tags: ${{ env.NGINX_IMAGE }}

  prepare-certificate:
    runs-on: ubuntu-latest
    outputs:
      certificate-full-chain: ${{ steps.yc-get-cert.outputs.certificate-full-chain }}
      private-key: ${{ steps.yc-get-cert.outputs.private-key }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get certificate from YC
        uses: ./yandex-cloud/yc-get-cert-action
        id: yc-get-cert
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          certificate-id: ${{ secrets.YC_CERTIFICATE_ID }}

  update-yc:
    runs-on: ubuntu-latest
    needs: [build-backend, build-nginx, prepare-certificate]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy COI VM
        id: deploy-coi
        uses: yc-actions/yc-coi-deploy@v1.2.0
        env:
          BACKEND_IMAGE: ${{ env.BACKEND_IMAGE }}
          NGINX_IMAGE: ${{ env.NGINX_IMAGE }}
          YC_VM_SSH: ${{ secrets.YC_VM_SSH }}
          YC_VM_USERNAME: ${{ secrets.YC_VM_USERNAME }}
          NGINX_CERT: ${{ needs.prepare-certificate.outputs.certificate-full-chain }}
          NGINX_CERT_KEY: ${{ needs.prepare-certificate.outputs.private-key }}
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          vm-name: syncwatch-sockets-test
          vm-service-account-id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          vm-cores: 2
          vm-platform-id: 'standard-v2'
          vm-memory: 512Mb
          vm-disk-size: 30Gb
          vm-core-fraction: 5
          vm-subnet-id: ${{ secrets.YC_SUBNET_ID }}
          docker-compose-path: './yandex-cloud/docker-compose.yc.yaml'
          user-data-path: './yandex-cloud/user-data.yaml'
